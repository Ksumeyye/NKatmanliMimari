<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAASFwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAlw
        SFlzAAALEwAACxMBAJqcGAAAFsRJREFUeJztnXnUXlV1h3dlnscQkCFQIsigUBDFCQpaGZQWCOICMStU
        iliKgCxXmzIkIpSVVKlYQRmSMgpYIAaZikIbjBVCmMokFpoiEQRlngSE9vy877dIvu+d9j3Tvvf8nrWe
        f2DBt/c+77nve+89Zx8RQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBii+Wdk5xnOa/p
        eKZzf+dyGeMihEQGE3+x8/96+JhUFwJCSMuYLr0n/mhPzBMiISQGU2T4yT/i5ByBEkLCsrbzGdFfAJ52
        rpUhXkJIQI4V/eQf8dgM8RJCAnK71L8ALMgQLyEkEBs735L6FwD8txOSR00ICcKXpf7k520AIQ3np+J/
        AZifPGpCiDfrO98U/wsA/h/vTBw7IcSTI8V/8o/414ljJ4R4crOEuwDclDh2QogH6zrfkHAXgN8710ua
        ASGkNodJuMk/4mFJMyCE1OZ6CX8BuD5pBoSQWqzpfE3CXwBel2pfASHEMNjFF3ryj8gdgoQYZ67EuwDM
        TZgHIUTJ6s5XJN4F4NXO3yCEGOQoiTf5RzwqWTaEkKHBA7onJf4F4Enhw0BCTLGC88cSf/KP+KPO3ySE
        ZAZ7/m+RdJN/xHnOjRLkRwgZxTLO9zm/4XxR0k/+EfG3v+7csRMTIaQHWztnOn/ifMTDxyXsOv9Qvt6J
        zSc31GaGc6uaNSbEHKs4zxW/1lyliR4E53RqR0hjwTvzhZJ/QjVVNCVdTV11QowwR/JPoqZ7pbrqhBhg
        T8k/edriHsraE5KdqyX/xGmL3INAGsWykvf1XNt8QfiakTQIdNHNPWnaJluSkcawoeSfMG1zvGoECMnI
        chJ3W25pviS8BSAN4wbJP3Ha4nXK2hOSnf0k/8Rpi/soa0+ICW6U/JOn6bIbMWks6zjvl/yTqKneJ2w+
        QhrOWs5rJf9kapqo2Zo16k2IOf7IebTzd5J/YlkX24qnO99Rp9CEWGZb572Sf5JZ9efOHWpXl5AGsJLz
        DMk/2ax5oXNVj7oS0igmOZ+R/BMvt887P+tZS0IayQTnfMk/CXOJhh8TvatISIPBzsHpzt9L/gmZSrRH
        w23Q8v7lI6Qd7OZcLPknZ2x/LVWzFELIKNaVdjcS+Tfn+sGqRUgLwZqBkyX/ZA3t9E5uhJAhwIEbuSdt
        KGcGrg0hrQcPyB6U/JPXV+yFWC5wbQgpgkMl/wT2dXLwqhBSCGtIs18P4giz1YNXhZCCwJl5uSdyXR+K
        UA9CiuIOyT+R67ogQj0IKYpFkn8i1/XhCPUgpBjGSbNPFUbs6wSvCiGFgCfouSexr4cErwohhYAz8XJP
        YF/nBK8KIQWA5hhtOFzkVedqgWtDSOv5jOSfvKE8MHBtCGk935f8EzeUlweuDSGtBn0DcR5e7okbyped
        KwetECEtpo3Hiu0btEKEtJiLJf+EDe1FQStESEvB1tk2dgt+TtgDkJCB7C35J2ss9wpYJ0JaySzJP1Fj
        eV7AOhHSOpZxPiX5J2osfytVG3RCSBd2lzQT8QWpOvSe3fHGzj9L8bc/FqxahLSMMyXu5ENP/r+Sap3B
        aFbq/LtfR47hLK8KEdJi0EEn1sTDppxhtuau7bwqYhzsEkRIF/D6L8bef2zGOVr0PfmxFfnlCPG8JewS
        TMgYsGMu9GS7z7mtR0z4b++NENcqHjER0lpelHCT7DvS/V5fy0qd/1eouJ4PEBMhreQG8Z9gTzv3jxDb
        fp3/t29810eIjZBWcJD4Ta5bnBtHjA//73meMbI3ACE9eIdUrbS1kwqHh0yTaiFRbPA3TpLq0A9tnLdJ
        lSMhpAebie5d/KPOj2SI8yOdvz1snMhpswxxEtI4NnfeI4Mn1WXOtTLFKJ2/fVmXuEaLXDbPFCMhjQTv
        yg+X6mfzkucDolMQugXvni+0MWB579WydBcjxHyrVKsLuf6fEA/wKm6iVA/hLE8mxIYYEWuIV5CEEEII
        IYQQQgghhBBCCCGEEEIIIYT8ASxGea9zT+chUq2sg59zfqrz73hYRbms7tzR+UmpOiCNfD4OluoMgy0k
        zQYrEogtncc4L3U+7HxTBq9Tf12qzjlY036kc8PkUZMUoCXaDs6/k6o/4i9luE1MaKl2h/MC5xSpeiYS
        Q2ziPFHCNdTEReOnzi8710uYB4nDNs6vO38lYT4f+MJAS3XscVg1YR5kFNtJ9U2/5EaZ0KIp5unODRLl
        RMKxm1QTNdZnA+Kgk+OlupUgidhIqp9jw/y8DyV+Bp4h/PnXBPCNj7ZjqT4bEIe54lfoignyKxbcw+Fn
        F5pKphzcJX3S+ZnYiZJaYPv0NKl+ouf6fPzCuWvsREtkDake3OQa2NHOFra2tgS2IKP3QO7PBcQt6cnC
        twfBwN5yXFlzD+xo8WT4nRHzJsPxIedvJP/nYbTXSHXWA/EAr23wszv3YPYSr5K2iJY9GQTe38c4vSiU
        dzrXjZZ9y8EinRB96GOL10tbRqoB6Q0Wd/1O8o//IP/LOS5SDVrLphL/lNqQLnKuH6MQpCs7O1+R/OM+
        rD8TtkgbGiyuGKYjrjXRvHOFCPUgS4PXwI9L/vHW+n3RH9BaJHjCnnuw6vrtCPUgb4NDRW6W/ONc1y+F
        L0m7wPlzuQfJ172DV4WM8LeSf3x9xDOLrYNXpSXgp/9jkn+QfMWbAauvf/ANOkGqe2jshvx0x706/8zy
        cwzEbfmJ/7DieQCPR+vCKZJ/cEJ5SuDa1AX3y3/pPFeqV1JY0jwodrxTx8/sbzkPcK6cPOru4B4697iG
        cnLg2jQevCZ5UfIPTCjxTZVrkRC+xY9z3jUgRk0uV0h1cnGuJ9nbO9/qE2PTxJmKfGC8BG369h9xZtAK
        DWYr579I3LXwT0i1TTr1Mug2ffuPeFjQCjUYdORp0jv/YX1O0uwXxzc+fuLH3BY9WqzO/Iqk6aaEX1I5
        N/jE8gHha8E/MEnyD0YsDw1Yp25McT6bMT98iD8cOcepGfOLbezaNYJhjpduqjcFrNOSoAHFlQbyg/jl
        gb3wsXa/3Wkgx1h+N2CdGgn2cL8g+Qcilq9J+Kfo2B0Zqv1ZSHE8eOhbnk0M5BXT/wlXqmaCd8+5ByG2
        Hw9WLfu7I7FFOuTut8kGcorthGDVaiB4opx7AGJ7aqBa4VXYMwbyGWTI3W/fNZBPbKcEqlUjmSX5ByC2
        8wPUaXPnUwZyGVZsjApx63OLgVxiOztAnRoL2m/nHoDYPuFZIzzwu89AHlrxkNL3NZfFTj+hnedZo0aD
        tsq5ByC26F7s8778EgM51PU4j7zXNhB/Ch/2qFGjwbLS3MVP5YSaNTrIQOw+YgHPdjVz385A/CnE/owi
        FwStJfmLn8oP1qjPmtKOFZILncvWyP/9BmJP5To16tN4xkv+wqfyQzXqc7qBuEN5eI38P2og7lQWeQFA
        L/fchU/lnyhrgwNKh9m62xTRwku7gehjBuJOZZFnTOAnbu7Cp1LbNfibBmIOrbYdVim3ANjmXGyDkDZ0
        eBnGCYqa4Nsg5wafWGLZq2a/wEYGYk7hq4qatI7/lvwDEFu8BtQcGjnFQMyx/ISiDnhwmHKLcy4fUdSk
        dTS5w+uwLlLW5FoDMcfyYmUtFhuIObY3KGvSKk6T/AMQ2x8o6oHddK8ZiDmWWM6seedtZctzTGco6tE6
        0Jk29wDEdqqiHnsYiDe22yrqUcJmsf0V9WgdWAyEe+TcgxBTzSKgkw3EG9ujFPX4gIF4Y4rP/nqKerQS
        9EnPPRCxxGYWzZPvEn7yXqGoBx4EWu5/4Ot/KmrRWo6U/AMRy+8oa3G/gZhje4+yJm1cEzHiscpatBLs
        +mrCMc913FlRh2VbXIclfVpRE7CjgZhj+IbYPokpKW3s+36HsgalLHyB2gNG7jYQc2gvVdag1bxH2vcw
        8CBlDTY3EHMqJypr04ZDY0e7g7IGred7kn9QQol++dotsFsbiDuV2r0R4DYDcYfyqhr5t54tpD0nwOxV
        I//tDcSdyk1q1KctayTwGX93jfyLAAdM5B4gXy+pmftEA7Gnsm7r8IsMxO7rtJq5FwF+Nt8q+Qeprtj3
        vnbN3Fc2EH8q6+5/X0Oqk3Vzx19XnHK0XM3ciwH3hy9J/sHSip1re3jm/pyBPGL7omeNcNBKEx8Y4wSs
        rT1zL4a9pXpPmnvQNGobXnSjie2/td4ZoE5HGMhDIy5Yfx4g76L4vFTdUnIP3jB+O1DOsw3kEtvzA9Vq
        hoFchjXEl0ORnCT5B2+QF0q4lk6fN5BPbL8YqFbYVtyEh4InBcq3SDDI2E+fexB7iQeWIR/qbGUgp9hu
        E6xa1YErllcJcrVfACy/H/9U4FxxwVtkIK9YxjgO+0ADefWyzoIn0gWrp+KuHiHXrxnIK5YzA9ZphHEG
        8uqm75mQZAms7gkPcQLuaN4lzXn4qfU9Aes0gtX28o9FyLVIsGUy92D28gORcm7jqcmxTsHdxUBu3cRF
        vMgTf0LzD5J/MHsZ6yHPngZyC+0ng1boba4wkFsvvxop52JAw0TrveFjdXX5DwO5hXKBxDkB9ysGcusn
        FrPtGyHv1oO98RdIc+6F0dt9p8A1sPrTto67Ba7N+5zXG8hrGPEZxloRbQ+EIsFDIhSracuAR5zv/LTo
        GoH24zwDOfk6O1At8AsC+wB+aCCnOr7ZiT30F0Ur2E6qE3Ga8o0/yLukOt3WF+yaa/LxaTjZZ60Addhd
        qj0EufMJJX69bB+gLo0Hr3C+Jc39xh8kLmq+O8BwK2D9OUg3Maa7e+aOxhlN/cYfJMb0n6WaA8WBn3NT
        xO77/ZDiqC80OvFZMvwFA3loPdIjX/SFOEHafUzaiJgDh0qch6QmwbvRtl7V+4mfsO/1qJvl16GjPcMj
        TzwHusNADqnFnKjbKakxYOHMIslf7Fyi7//RNWuHb4jzDeQwSMRYd3fk55yvGMghl1g9uEvN2pkGH97j
        pZn3sjE8x7lCjTriNmKBgfh7+RPRd0MGqMXZBuK3IOYI5kprbgnwgSih0YVGbG76eM167m0g/l7+ac2c
        8LDQ6oavXM6SehdTU2CzTIn3+/1EPTbyqCm+LS32xMMDO5/1D+OlWgOSOw9L3uhczaOmWcH7X5x+mruI
        VsT20P28KlqB+2uLZwi+FCA3gBo9YSAfK+L07LqdprOBb37cD+YunhWxE24Dr4q+zRYG8unlhEA5Yo//
        jQbysSJORVrVq6IJwYOq6yR/0SyIlY1nSNi2Yf9kIK9ehmz4gduJ6WLzdieHP5Z6D46Tgp+nOBknd7Es
        iB7/oVuGWd8didj+InDO2EZcwnkJw4jzM0M1oI1Cm9tZacQJQdt51nJJ8NAQrw6bsFcC39jnOjcOmD9q
        +biB3Cz4Nc9aRgOvcix/O6XyYQm39fOPpbqFeNVAXlpxCCae6oc6DWdT54MG8sotLrC+J1AFZ0PnU5K/
        OLnFw5oQyzkxadDppg33v8gBx2GHaAeO2rbpmPC6Yq5t6FnLYGCxAp5y5y5KbrEF2HdnF7b/Thebr/l8
        xe5A/Jrx7aSMGt9lIJ/c1l11GRy0xMpdjNz+QqrmpXXBss+Dnb8ykEtscS//WfFb6opfAvcbyCW3x3jU
        MAj40Jf+hBbHVU/wqCGOvL7cQB6pnSt+XXPxE/gRA3nk9AXJfCtwWZegSvJZqRbm1OX9Up2WkzuPXP7S
        +VGP+uEMhdL3EFzuUT8v/mzIANsq3njUfRqLn79Tpb2dkDS+0alF3VsCjEHpb58+UbN2XljelprC42rW
        DSvczjEQvzXRBbruiknr7cFji2YzSbcPt/HgCo2X1Kwbd0f212f32/cMxJ/TvWrWrRa3REqiCS6Seq+y
        sKOLuyMHi91vdR4OYkz+10D8OeuWhF0TJWRRLGqpc8gFvvnbeN5fLHF7WeeXAB4otmHxVF1DH8DSlasz
        JWfB02vUC/e1TTnFxpI3Sb3db6cbiD2X19aol4pNpNwnrg85V1LWCzu3Sn9V6uMc0XcZWlGqscodew7x
        62dTZb1UlLzbb+8a9ZphIO6mO0Nd9WoLce64c3lKjXoNBb7NHjOQYA6vq1EvXDCasH3XuqhhnRN2S21K
        g+PYovQM2NVAcjnEttYtlbXCXvjfGIi9LWK132aqEai2ZLdxU9UwRjlb4EwDieVQe8oNHvrxdV94bxX9
        QqEzDMSdw7OUdRoIVhmV2KkV3yDazRZTDcTdVqcqxgFg7Er8FYC5GnRl4I4GksrhOco64S3JSwbibqs4
        Nkx7K1DqiUM7KOvUlxMMJJRavO58l7JOcw3E3Xa1D2TRVq3ETVcnKOvUlxI7/lymrNE+BmIuRW3n4YsN
        xJzaecoa9QQPXko8sfWDihrhfuteAzGX4gOie9W1s4GYU4s5u7yiRizeEt6jrNEkAzGX5gFDjczb3GEg
        5tTurKxRV44xkEhqj1DW6HYDMZfm3aJ70v0FAzGnNkjPwNKO9n5ZdDvRLB/X3Xb3GWJ8RsCYvmwg5pTO
        UtSnJwsNJJJS7cO/mw3EXKraB12lNV+9TVmfMeAnVmlXTc0R3u8WrvfP7bYDR+lt9jUQb0pfFM8FQRsY
        SCKlaHG+oqI+lk/qLUXNUm30F3jWQMwpXU9RnzGU9gbgUkVt8Hr0twZiLt2nRfe6q7T+DDspajOGAw0k
        kNLJitqUvOfcmppj2CcbiDel2telS3GUgQRSiW4q4xW1uchAzLTy4gFjtSTjpKy+gV9U1GYMJxpIIJW3
        K+qCn//PG4iZVmIsNLcBJb3Z+ntFXcZQ0kOubyjqspuBeOnSajrilvS5/kdFXcZQ0lbKSYq6zDQQL13a
        mX1HbGkOMBBvKs9U1GUMswwkkMoNFHW520C8dGnv7jtiSzPeQLypPFtRlzGcbyCBFD6qqAlOoCm1Nbpl
        8WBvjT7jNppHDcScwtmKmozhQgMJpPCHiprsYSBe2l3Nac2lnNF4gaImYyjlAnCqoibTDMRLuzu997CN
        4TQD8aaQF4AhPEhRkzkG4qXdvbLPuI3mYAPxppAXgCHUNFB82EC8tLsP9Rm30exkIN4U8gIwhMMeR41T
        fktaRdY08XB22PMb1zMQbwp5ARjgS4p6bGMgXtpfzSlOJbRw97oAnG8ggdjer6gHu//YV/Mm4AED8cbW
        6zVgCSve/l1RjyMMxEv7e3jP0RvLLQbije1pinqM4W8MJBDbqxT1mGYgXtpfzYEYPzAQb2y9dgNONJBA
        bM9V1OObBuKl/dVs6iqh4a32dKsx3GkgCSsfmAsMxEv7q7nnbfuuwIWKWvSk7Q++NPdIVxiIl/b38p6j
        N5YZBuKNqeaBaF/a3E75FEUdSrhnbLqa1YCnGog3lpr+lgPBApgFBpKK4XRFHUrZQNJk5/YcvbF81UC8
        MbxVqjkblFWkurrmTi60JylqcK2BeGl/r+05emM5yUC8of1XqeZqFHDIADrn/NxAoqHkBaBdlnoBeNC5
        vyJ3L3AhwAaa46V6jXaN80cN9RBF3rwA2FdzAcDY5/781RVzDnMPTT81m9mIB7wA2FdzASBEBS8A9uUF
        gESDFwD78gJAosHXgPbV9HckREUJa8eb7nk9R48QT06W/B9w2t/pvQaPEF92kfwfcNrfD/ccPUI8Wca5
        WPJ/yGl3F3fGiJBooONM7g867e5hfcaNkCAs65wv+T/sdGnnd8aGkOjgcMlFkv9DTysXdcaEkGSMc86T
        /B/+0v2Zc/0BY0VIFJZ3fsn5lOSfCKWJmh/VGQNCsrKCcy+pesyhaxC+lRbSoKKmczo13rNTc0IIIYQQ
        QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEkKL4f2vhgc8u3i+gAAAAAElFTkSuQmCC
</value>
  </data>
</root>